(function() {
    var implementors = Object.fromEntries([["xege",[["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.AlphaType.html\" title=\"enum xege::AlphaType\">AlphaType</a>",1,["xege::enums::AlphaType"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.BkMode.html\" title=\"enum xege::BkMode\">BkMode</a>",1,["xege::enums::BkMode"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.CharSet.html\" title=\"enum xege::CharSet\">CharSet</a>",1,["xege::enums::CharSet"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.ClipPrecision.html\" title=\"enum xege::ClipPrecision\">ClipPrecision</a>",1,["xege::enums::ClipPrecision"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.FillPattern.html\" title=\"enum xege::FillPattern\">FillPattern</a>",1,["xege::enums::FillPattern"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.FontFamily.html\" title=\"enum xege::FontFamily\">FontFamily</a>",1,["xege::enums::FontFamily"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.ImageError.html\" title=\"enum xege::ImageError\">ImageError</a>",1,["xege::image::ImageError"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.Key.html\" title=\"enum xege::Key\">Key</a>",1,["xege::enums::Key"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.KeyMsg.html\" title=\"enum xege::KeyMsg\">KeyMsg</a>",1,["xege::msg::KeyMsg"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.LineCap.html\" title=\"enum xege::LineCap\">LineCap</a>",1,["xege::enums::LineCap"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.LineJoin.html\" title=\"enum xege::LineJoin\">LineJoin</a>",1,["xege::enums::LineJoin"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.LineStyle.html\" title=\"enum xege::LineStyle\">LineStyle</a>",1,["xege::enums::LineStyle"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.OutPrecision.html\" title=\"enum xege::OutPrecision\">OutPrecision</a>",1,["xege::enums::OutPrecision"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.PathFillMode.html\" title=\"enum xege::PathFillMode\">PathFillMode</a>",1,["xege::path::PathFillMode"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.Pitch.html\" title=\"enum xege::Pitch\">Pitch</a>",1,["xege::enums::Pitch"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.Quality.html\" title=\"enum xege::Quality\">Quality</a>",1,["xege::enums::Quality"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.RenderMode.html\" title=\"enum xege::RenderMode\">RenderMode</a>",1,["xege::enums::RenderMode"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.TemplateMode.html\" title=\"enum xege::TemplateMode\">TemplateMode</a>",1,["xege::image::TemplateMode"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.TextHAlign.html\" title=\"enum xege::TextHAlign\">TextHAlign</a>",1,["xege::enums::TextHAlign"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.TextVAlign.html\" title=\"enum xege::TextVAlign\">TextVAlign</a>",1,["xege::enums::TextVAlign"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.Weight.html\" title=\"enum xege::Weight\">Weight</a>",1,["xege::enums::Weight"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"xege/enum.XEGEError.html\" title=\"enum xege::XEGEError\">XEGEError</a>",1,["xege::env::XEGEError"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/color/struct.Color.html\" title=\"struct xege::color::Color\">Color</a>",1,["xege::color::Color"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.ApplyMask.html\" title=\"struct xege::ApplyMask\">ApplyMask</a>",1,["xege::image::ApplyMask"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Console.html\" title=\"struct xege::Console\">Console</a>",1,["xege::console::Console"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Font.html\" title=\"struct xege::Font\">Font</a>",1,["xege::enums::Font"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.FontStyle.html\" title=\"struct xege::FontStyle\">FontStyle</a>",1,["xege::path::FontStyle"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Image.html\" title=\"struct xege::Image\">Image</a>",1,["xege::image::Image"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Init.html\" title=\"struct xege::Init\">Init</a>",1,["xege::env::Init"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.KeyFlags.html\" title=\"struct xege::KeyFlags\">KeyFlags</a>",1,["xege::msg::KeyFlags"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Line.html\" title=\"struct xege::Line\">Line</a>",1,["xege::graphics::Line"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.MouseMsg.html\" title=\"struct xege::MouseMsg\">MouseMsg</a>",1,["xege::msg::MouseMsg"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Path.html\" title=\"struct xege::Path\">Path</a>",1,["xege::path::Path"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.PitchAndFamily.html\" title=\"struct xege::PitchAndFamily\">PitchAndFamily</a>",1,["xege::enums::PitchAndFamily"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Window.html\" title=\"struct xege::Window\">Window</a>",1,["xege::window::Window"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.XEGE.html\" title=\"struct xege::XEGE\">XEGE</a>",1,["xege::env::XEGE"]],["impl&lt;T&gt; UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Point.html\" title=\"struct xege::Point\">Point</a>&lt;T&gt;<div class=\"where\">where\n    T: UnsafeUnpin,</div>",1,["xege::graphics::Point"]],["impl&lt;T&gt; UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.Rect.html\" title=\"struct xege::Rect\">Rect</a>&lt;T&gt;<div class=\"where\">where\n    T: UnsafeUnpin,</div>",1,["xege::graphics::Rect"]],["impl&lt;U, T&gt; UnsafeUnpin for <a class=\"struct\" href=\"xege/struct.PixelPoint.html\" title=\"struct xege::PixelPoint\">PixelPoint</a>&lt;U, T&gt;<div class=\"where\">where\n    T: UnsafeUnpin,\n    U: UnsafeUnpin,</div>",1,["xege::graphics::PixelPoint"]]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[6058]}