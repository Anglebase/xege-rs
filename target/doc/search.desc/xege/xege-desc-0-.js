searchState.loadedDescShard("xege", 0, "A\nAlt\nAlternate fill mode.\nAnimation mode. Equivalent to …\nFont is always antialiased if the font supports it and the …\nMask channels to apply.\nAutomatic rendering\nB\n\\\nBackspace\n`\n\\\\ fill with thick lines\nTreat non-existent pixels as black(0x000000).\nC\nCapsLock\nStyle: －－－－－－－－－－－－\nChild window.\nClear\nClosely spaced dot fill\n,\nConsole context\nCtrl\nD\nStyle: －·－·－·－·－·－·\nNovelty fonts. Old English is an example.\nSpecifies the default font mapper behavior.\nAppearance of the font does not matter.\nDefault fill mode.\nDefault initialization mode.\nSpecifies default clipping behavior.\nDelete\nInstructs the font mapper to choose a Device font when the …\nUse default font.\n.\nIgnore pixel regions that cannot be perfectly matched by …\nStyle: ··············\nDown arrow\nAppearance of the font is less important than when …\nOrdinary drawing functions.\nBase trait for drawable devices.\nE\nYou must specify this flag to use an embedded read-only …\nEmpty fill pattern.\nEnd\nEnter\n=\nEsc\nF\nF1\nF10\nF11\nF12\nF2\nF3\nF4\nF5\nF6\nF7\nF8\nF9\nFill pattern enumeration.\nFont styles.\nG\nContent related to the drawing environment.\nH\nLight hatch fill\nHide the window at the beginning of creation.\nHigh-quality drawing functions.\nHome\nI\nIgnore non-existent pixels.\nImage\nThe initialization options.\nInsert\nInterleaving line fill\nJ\nK\nKey flags\nKey event message\nL\nLeft arrow\nLeft Alt\n[\nLeft mouse button\nLeft Ctrl\nLeft Shift\nWhen this value is used, the rotation for all fonts depends\nLine\n— fill\n\\\\ fill\n/// fill\nM\nManual rendering\nMiddle mouse button\nFonts with constant stroke width (monospace), with or …\nMouse event message\nN\nNo border window.\nNo force exit when closing window.\nDisable DPI scaling of the system.\nFont is never antialiased.\nNull line style.\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nNumPad +\nNumPad /\nNumPad .\nNumLock\nNumPad *\nNumPad 0\nNumPad 1\nNumPad 2\nNumPad 3\nNumPad 4\nNumPad 5\nNumPad 6\nNumPad 7\nNumPad 8\nNumPad 9\nNumPad -\nO\nOther key\nThis value instructs the font mapper to choose from …\nP\nPageDown\nPageUp\nGraphics path.\nPath fill mode.\nPoint and Color\nPoint\nCharacter quality of the font is more important than exact …\nQ\n’\nR\nInstructs the font mapper to choose a raster font when the …\nRectangle.\nManual rendering mode.\nRight arrow\nRight Alt\n]\nRight mouse button\nRight Ctrl\nRight Shift\nFonts with variable stroke width (proportional) and with …\nS\nFonts designed to look like handwriting. Script and …\nScrollLock\n;\nShift\n/// fill with thick lines\n/\nSolid fill pattern.\nSolid line style.\nSpace\nThis value is not used by the font mapper, but it is …\nThis value is not used by the font mapper, but it is …\nNot used by the font mapper, but is returned when raster, …\nFonts with variable stroke width (proportional) and …\nT\nTab\nEdge pixel processing mode.\nTopmost window.\nInstructs the font mapper to choose a TrueType font when …\nInstructs the font mapper to choose from only TrueType …\nU\nUp arrow\nUser defined line style.\nUser defined fill\nV\nW\nTreat non-existent pixels as white(0xFFFFFF).\nWidely spaced dot fill\nWinding fill mode.\nWindow handle.\nPlay the logo animation after creating the window.\nX\nMouse extension button 1\nMouse extension button 2\nGraphics environment.\nHeavy cross hatch fill\nY\nZ\nAdd a arc to the current path.\nAdd a bezier curve to the current path.\nAdd a circle to the current path.\nAdd a closed curve to the current path.\nAdd a curve to the current path.\nAdd an ellipse to the current path.\nAdd a line to the current path.\nAdd a path to the current path.\nAdd a pie to the current path.\nAdd a polygon to the current path.\nAdd a polyline to the current path.\nAdd a rectangle to the current path.\nAdd a text to the current path.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all values.\nReturns a bitmask that contains all flags.\nReturns a bitmask that contains all flags.\nReturns a bitmask that contains all flags.\nReturns a bitmask that contains all flags.\nReturns the bitwise AND of the bitmask.\nReturns the bitwise AND of the bitmask.\nReturns the bitwise AND of the bitmask.\nReturns the bitwise AND of the bitmask.\nDraw a arc.\nDraw a arc.\nDraw an arc.\nDraw an arc.\nDraw a arc.\nDraw a arc.\nDraw a rectangle.\nDraw a rectangle.\nDraw a block.\nDraw a block.\nDraw a bezier curve.\nDraw a bezier curve.\nReturns the underlying bits of the bitmask.\nReturns the underlying bits of the bitmask.\nReturns the underlying bits of the bitmask.\nReturns the underlying bits of the bitmask.\nDraw a circle.\nDraw a circle.\nDraw a circle.\nDraw a circle.\nClear the device.\nClear the device.\nclear console\nClose the current subpath.\nclose console\nClose all subpaths.\nCloses the graphics environment.\nReturns <code>true</code> if <code>self</code> contains all values of <code>other</code>.\nReturns <code>true</code> if <code>self</code> contains all values of <code>other</code>.\nReturns <code>true</code> if <code>self</code> contains all values of <code>other</code>.\nReturns <code>true</code> if <code>self</code> contains all values of <code>other</code>.\nDelay by frame rate.\nDelay by jitter frame rate.\nMillisecond delay function\nDraw a bezier curve.\nDraw a bezier curve.\nDraw a closed curve.\nDraw a closed curve.\nDraw a curve.\nDraw a curve.\nDraw an image with a specified position.\nDraw an image with a specified position.\nDraw an image with scale.\nDraw an image with scale.\nDraw multiple lines.\nDraw multiple lines.\nDraw a path\nDraw a path\nDraw a path at position <code>(x, y)</code>.\nDraw a path at position <code>(x, y)</code>.\nDraw a polyline.\nDraw a polyline.\nDraw a polyline.\nDraw a polyline.\nDraw a ellipse.\nDraw a ellipse.\nDraw an ellipse.\nDraw an ellipse.\nDraw a ellipse.\nDraw a ellipse.\nEnable anti aliasing.\nEnable anti aliasing.\nDraw a filled circle.\nDraw a filled circle.\nDraw a filled circle.\nDraw a filled circle.\nDraw a filled bezier curve.\nDraw a filled bezier curve.\nDraw a ellipse.\nDraw a ellipse.\nDraw a filled ellipse.\nDraw a filled ellipse.\nDraw a ellipse.\nDraw a ellipse.\nDraw a filled path.\nDraw a filled path.\nDraw a filled path at position <code>(x, y)</code>.\nDraw a filled path at position <code>(x, y)</code>.\nDraw a filled pie.\nDraw a filled pie.\nDraw a filled pie.\nDraw a filled pie.\nDraw a filled pie.\nDraw a filled pie.\nDraw a filled polygon.\nDraw a filled polygon.\nDraw a filled polygon.\nDraw a filled polygon.\nDraw a gradient polygon.\nDraw a gradient polygon.\nDraw a fill rectangle.\nDraw a fill rectangle.\nDraw a fill rectangle.\nDraw a fill rectangle.\nDraw a fill rounded rectangle.\nDraw a fill rounded rectangle.\nDraw a fill rounded rectangle.\nDraw a fill rounded rectangle.\nFlatten the path.\nSpecify the boundary color filling area.\nSpecify the boundary color filling area.\nSpecify the surface color filling area.\nSpecify the surface color filling area.\nFlushes the window.\nFlush the key message buffer.\nFlush the mouse message buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad an image from a file.\nLoad an image from another image.\nLoad an image from a window.\nReturns a bitmask that contains all flags.\nReturns a bitmask that contains all flags.\nReturns a bitmask that contains all flags.\nReturns a bitmask that contains all flags.\nGet current background color.\nGet current background color.\nGet the bounding box of the path.\nGet image pixel buffer.\nGet image pixel buffer.\nGet mutable image pixel buffer.\nGet mutable image pixel buffer.\nRead a character from the console\nGet next character message.\nGet current color.\nGet current color.\nGet current fill color.\nGet current fill color.\nGet current font.\nGet current font.\nGet device height.\nGet device height.\nGet current line cap style.\nGet current line cap style.\nGet current line join style.\nGet current line join style.\nGet current line style.\nGet current line style.\nGet next mouse message.\nGet next key message.\nGet the color of the pixel at the specified position.\nGet the color of the pixel at the specified position.\nGet current text color.\nGet current text color.\nGet device width.\nGet device width.\nGet current x position.\nGet current x position.\nGet current y position.\nGet current y position.\nHide the window.\nhide console\nGet the window handle.\nBlur the image.\nBlur the image.\nCreate and initialize console\nInitializes the graphics environment.\nIs the point in the path?\nIs the point on the stroke of the path?\nReturns <code>true</code> if <code>self</code> intersects with any value in <code>other</code>, …\nReturns <code>true</code> if <code>self</code> intersects with any value in <code>other</code>, …\nReturns <code>true</code> if <code>self</code> intersects with any value in <code>other</code>, …\nReturns <code>true</code> if <code>self</code> intersects with any value in <code>other</code>, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all values.\nReturns <code>true</code> if the bitmask contains all flags.\nReturns <code>true</code> if the bitmask contains all flags.\nReturns <code>true</code> if the bitmask contains all flags.\nReturns <code>true</code> if the bitmask contains all flags.\nIs button down event\nReturns <code>true</code> if the bitmask contains all flags.\nReturns <code>true</code> if the bitmask contains all flags.\nReturns <code>true</code> if the bitmask contains all flags.\nReturns <code>true</code> if the bitmask contains all flags.\nIs left button event\nIs middle button event\nIs move event\nReturns <code>true</code> if the bitmask does not contain any values.\nReturns <code>true</code> if the bitmask does not contain any values.\nReturns <code>true</code> if the bitmask does not contain any values.\nReturns <code>true</code> if the bitmask does not contain any values.\nIs right button event\nChecks if the graphics environment is running.\nIs button up event\nIs wheel event\nGet the state of specified key.\nGets the last point of the path.\nDraw a line between two points.\nDraw a line between two points.\nDraw a line.\nDraw a line.\nDraw a line between current position and the specified …\nDraw a line between current position and the specified …\nDraw a line between current position and the specified …\nDraw a line between current position and the specified …\nGet the current mouse position.\nMove Window to (x, y) relative the screen.\nMove the current position by relative values.\nMove the current position by relative values.\nMove the current position to absolute values.\nMove the current position to absolute values.\nCreate a new image.\nCreate a new graphics path.\nReturns a bitmask that does not contain any values.\nReturns a bitmask that does not contain any values.\nReturns a bitmask that does not contain any values.\nReturns a bitmask that does not contain any values.\nReturns the bitwise NOT of the bitmask.\nReturns the bitwise NOT of the bitmask.\nReturns the bitwise NOT of the bitmask.\nReturns the bitwise NOT of the bitmask.\nReturns the bitwise OR of the bitmask.\nReturns the bitwise OR of the bitmask.\nReturns the bitwise OR of the bitmask.\nReturns the bitwise OR of the bitmask.\nConvert the path to the outline of the path.\nOutput text at current position.\nOutput text at current position.\nOutput text at specified rectangle area.\nOutput text at specified rectangle area.\nOutput text at specified position <code>(x, y)</code>.\nOutput text at specified position <code>(x, y)</code>.\nOutput text at position <code>(x, y)</code>.\nOutput text at position <code>(x, y)</code>.\nDraw a pie.\nDraw a pie.\nDraw a pie.\nDraw a pie.\nDraw a pie.\nDraw a pie.\nDraw a pieslice.\nDraw a pieslice.\nDraw a pieslice.\nDraw a pieslice.\nGet the number of points in the path.\nDraw a polygon.\nDraw a polygon.\nDraw a polyline.\nDraw a polyline.\nGet mouse position\nDraw an image.\nDraw an image.\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha blending and a specified alpha …\nDraw an image with rotation.\nDraw an image with rotation.\nDraw an image with rotation and scale with alpha blending.\nDraw an image with rotation and scale with alpha blending.\nDraw an image with rotation and scale.\nDraw an image with rotation and scale.\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha blending and a specified alpha …\nDraw an image with alpha.\nDraw an image with alpha.\nDraw an image with a specified scale.\nDraw an image with a specified scale.\nDraw an image with a specified size.\nDraw an image with a specified size.\nDraw a pixel at the specified position.\nDraw a pixel at the specified position.\nDraw pixel points Mix based on alpha\nDraw pixel points Mix based on alpha\nSet the color of pixels while preserving the original …\nSet the color of pixels while preserving the original …\nDraw pixel points Mix according to alpha, and retain the …\nDraw pixel points Mix according to alpha, and retain the …\nDraw multiple pixels\nDraw multiple pixels\nDraw a rectangle.\nDraw a rectangle.\nDraw a rectangle.\nDraw a rectangle.\nReset the path.\nResize the window to (width, height).\nResize the image.\nResize the image.\nReverses the order of the points in the path.\nDraw a rounded rectangle.\nDraw a rounded rectangle.\nDraw a rounded rectangle.\nDraw a rounded rectangle.\nDraw a rounded rectangle with different radii for each …\nDraw a rounded rectangle with different radii for each …\nSave an image to a file.\nDraw a sector.\nDraw a sector.\nDraw a sector.\nDraw a sector.\nSet global alpha transparency.\nSet global alpha transparency.\nSets the window caption.\nSet transformation matrix.\nSet transformation matrix.\nSet current background color.\nSet current background color.\nSet current background mode.\nSet current background mode.\nSet current color.\nSet current color.\nSet current fill color.\nSet current fill color.\nSet the fill mode.\nSet current fill style.\nSet current fill style.\nSet current font.\nSet current font.\nSet current font background color.\nSet current font background color.\nSet current line cap.\nSet current line cap.\nSet current line color.\nSet current line color.\nSet current line join.\nSet current line join.\nSet current line style.\nSet current line style.\nSet current line width.\nSet current line width.\nSet render mode\nSet current text color.\nSet current text color.\nSet Text alignment.\nSet Text alignment.\nSet ROP2.\nSet ROP2.\nShow the window.\nshow console\nSet the mouse cursor visible or not.\nDraw a solid circle.\nDraw a solid circle.\nDraw a solid circle.\nDraw a solid circle.\nDraw a solid ellipse.\nDraw a solid ellipse.\nDraw a solid ellipse.\nDraw a solid ellipse.\nDraw a solid pie.\nDraw a solid pie.\nDraw a solid pie.\nDraw a solid pie.\nDraw a solid polygon.\nDraw a solid polygon.\nDraw a solid rectangle.\nDraw a solid rectangle.\nDraw a solid rounded rectangle.\nDraw a solid rounded rectangle.\nStart a new subpath.\nApply a template to the image.\nGet text height.\nGet text height.\nGet text width.\nGet text width.\nApply a transformation to the image.\nTransform the path.\nReturns a bitmask that only has bits corresponding to flags\nReturns a bitmask that only has bits corresponding to flags\nReturns a bitmask that only has bits corresponding to flags\nReturns a bitmask that only has bits corresponding to flags\nWarp the path.\nGet wheel delta\nWiden the path.\nReturns the bitwise XOR of the bitmask.\nReturns the bitwise XOR of the bitmask.\nReturns the bitwise XOR of the bitmask.\nReturns the bitwise XOR of the bitmask.\nColor\nThis trait is the interface between other color formats …\nReturns the argument unchanged.\nGet a SVG/CSS3 color by name. Can be toggled with the …\nCalls <code>U::from(self)</code>.\nGenerate an identity matrix\nA trait for converting a other format matrix into an EGE …\nA static size matrix of row primary order for an M x N.\nGenerates a transpose matrix for the current matrix\nGet the number of columns of the matrix.\nGet the number of elements of the matrix.\nCalculate the cross product of two vectors.\nCalculate the determinant value of the matrix.\nDynamic size matrix\nMatrix equality comparisons that allow floating-point …\nReturns the argument unchanged.\nIt is same as <code>I()</code> method.\nCalls <code>U::from(self)</code>.\nCalculate the inverse matrix of the matrix\nGenerate a matrix of camera position transformations\nLU decomposition is performed on the matrix.\nCreate a matrix of M x N with default values of …\nCreate a matrix of M x N with the given value\nCalculate the modulus length of the vector.\nNormalize vector.\nGenerate a orthographic projection matrix\nGenerate a perspective projection matrix\nAngle system to radian system\nCalculate the rank of the matrix\nGenerate a 2D rotation transformation matrix.\nGenerate a 3D rotation transformation matrix.\nA 3D rotation transformation matrix around the x-axis is …\nA 3D rotation transformation matrix around the y-axis is …\nA 3D rotation transformation matrix is generated about the …\nGet the number of rows of the matrix.\nGenerate a 2D scaled transformation matrix.\nGenerate a 3D scale transformation matrix\nSwap two columns of the matrix.\nSwap two rows of the matrix.\nGenerate a 2D translational transformation matrix.\nGenerate a 3D translational transformation matrix.\nIt is same as <code>T()</code> method.\nGLSL syntax: v.w\nGLSL syntax: v.ww\nGLSL syntax: v.www\nGLSL syntax: v.wwww\nGLSL syntax: v.wwwx\nGLSL syntax: v.wwwy\nGLSL syntax: v.wwwz\nGLSL syntax: v.wwx\nGLSL syntax: v.wwxw\nGLSL syntax: v.wwxx\nGLSL syntax: v.wwxy\nGLSL syntax: v.wwxz\nGLSL syntax: v.wwy\nGLSL syntax: v.wwyw\nGLSL syntax: v.wwyx\nGLSL syntax: v.wwyy\nGLSL syntax: v.wwyz\nGLSL syntax: v.wwz\nGLSL syntax: v.wwzw\nGLSL syntax: v.wwzx\nGLSL syntax: v.wwzy\nGLSL syntax: v.wwzz\nGLSL syntax: v.wx\nGLSL syntax: v.wxw\nGLSL syntax: v.wxww\nGLSL syntax: v.wxwx\nGLSL syntax: v.wxwy\nGLSL syntax: v.wxwz\nGLSL syntax: v.wxx\nGLSL syntax: v.wxxw\nGLSL syntax: v.wxxx\nGLSL syntax: v.wxxy\nGLSL syntax: v.wxxz\nGLSL syntax: v.wxy\nGLSL syntax: v.wxyw\nGLSL syntax: v.wxyx\nGLSL syntax: v.wxyy\nGLSL syntax: v.wxyz\nGLSL syntax: v.wxz\nGLSL syntax: v.wxzw\nGLSL syntax: v.wxzx\nGLSL syntax: v.wxzy\nGLSL syntax: v.wxzz\nGLSL syntax: v.wy\nGLSL syntax: v.wyw\nGLSL syntax: v.wyww\nGLSL syntax: v.wywx\nGLSL syntax: v.wywy\nGLSL syntax: v.wywz\nGLSL syntax: v.wyx\nGLSL syntax: v.wyxw\nGLSL syntax: v.wyxx\nGLSL syntax: v.wyxy\nGLSL syntax: v.wyxz\nGLSL syntax: v.wyy\nGLSL syntax: v.wyyw\nGLSL syntax: v.wyyx\nGLSL syntax: v.wyyy\nGLSL syntax: v.wyyz\nGLSL syntax: v.wyz\nGLSL syntax: v.wyzw\nGLSL syntax: v.wyzx\nGLSL syntax: v.wyzy\nGLSL syntax: v.wyzz\nGLSL syntax: v.wz\nGLSL syntax: v.wzw\nGLSL syntax: v.wzww\nGLSL syntax: v.wzwx\nGLSL syntax: v.wzwy\nGLSL syntax: v.wzwz\nGLSL syntax: v.wzx\nGLSL syntax: v.wzxw\nGLSL syntax: v.wzxx\nGLSL syntax: v.wzxy\nGLSL syntax: v.wzxz\nGLSL syntax: v.wzy\nGLSL syntax: v.wzyw\nGLSL syntax: v.wzyx\nGLSL syntax: v.wzyy\nGLSL syntax: v.wzyz\nGLSL syntax: v.wzz\nGLSL syntax: v.wzzw\nGLSL syntax: v.wzzx\nGLSL syntax: v.wzzy\nGLSL syntax: v.wzzz\nGLSL syntax: v.x\nGLSL syntax: v.x\nGLSL syntax: v.x\nGLSL syntax: v.xw\nGLSL syntax: v.xww\nGLSL syntax: v.xwww\nGLSL syntax: v.xwwx\nGLSL syntax: v.xwwy\nGLSL syntax: v.xwwz\nGLSL syntax: v.xwx\nGLSL syntax: v.xwxw\nGLSL syntax: v.xwxx\nGLSL syntax: v.xwxy\nGLSL syntax: v.xwxz\nGLSL syntax: v.xwy\nGLSL syntax: v.xwyw\nGLSL syntax: v.xwyx\nGLSL syntax: v.xwyy\nGLSL syntax: v.xwyz\nGLSL syntax: v.xwz\nGLSL syntax: v.xwzw\nGLSL syntax: v.xwzx\nGLSL syntax: v.xwzy\nGLSL syntax: v.xwzz\nGLSL syntax: v.xx\nGLSL syntax: v.xx\nGLSL syntax: v.xx\nGLSL syntax: v.xxw\nGLSL syntax: v.xxww\nGLSL syntax: v.xxwx\nGLSL syntax: v.xxwy\nGLSL syntax: v.xxwz\nGLSL syntax: v.xxx\nGLSL syntax: v.xxx\nGLSL syntax: v.xxx\nGLSL syntax: v.xxxw\nGLSL syntax: v.xxxx\nGLSL syntax: v.xxxx\nGLSL syntax: v.xxxx\nGLSL syntax: v.xxxy\nGLSL syntax: v.xxxy\nGLSL syntax: v.xxxy\nGLSL syntax: v.xxxz\nGLSL syntax: v.xxxz\nGLSL syntax: v.xxy\nGLSL syntax: v.xxy\nGLSL syntax: v.xxy\nGLSL syntax: v.xxyw\nGLSL syntax: v.xxyx\nGLSL syntax: v.xxyx\nGLSL syntax: v.xxyx\nGLSL syntax: v.xxyy\nGLSL syntax: v.xxyy\nGLSL syntax: v.xxyy\nGLSL syntax: v.xxyz\nGLSL syntax: v.xxyz\nGLSL syntax: v.xxz\nGLSL syntax: v.xxz\nGLSL syntax: v.xxzw\nGLSL syntax: v.xxzx\nGLSL syntax: v.xxzx\nGLSL syntax: v.xxzy\nGLSL syntax: v.xxzy\nGLSL syntax: v.xxzz\nGLSL syntax: v.xxzz\nGLSL syntax: v.xy\nGLSL syntax: v.xy\nGLSL syntax: v.xy\nGLSL syntax: v.xyw\nGLSL syntax: v.xyww\nGLSL syntax: v.xywx\nGLSL syntax: v.xywy\nGLSL syntax: v.xywz\nGLSL syntax: v.xyx\nGLSL syntax: v.xyx\nGLSL syntax: v.xyx\nGLSL syntax: v.xyxw\nGLSL syntax: v.xyxx\nGLSL syntax: v.xyxx\nGLSL syntax: v.xyxx\nGLSL syntax: v.xyxy\nGLSL syntax: v.xyxy\nGLSL syntax: v.xyxy\nGLSL syntax: v.xyxz\nGLSL syntax: v.xyxz\nGLSL syntax: v.xyy\nGLSL syntax: v.xyy\nGLSL syntax: v.xyy\nGLSL syntax: v.xyyw\nGLSL syntax: v.xyyx\nGLSL syntax: v.xyyx\nGLSL syntax: v.xyyx\nGLSL syntax: v.xyyy\nGLSL syntax: v.xyyy\nGLSL syntax: v.xyyy\nGLSL syntax: v.xyyz\nGLSL syntax: v.xyyz\nGLSL syntax: v.xyz\nGLSL syntax: v.xyz\nGLSL syntax: v.xyzw\nGLSL syntax: v.xyzx\nGLSL syntax: v.xyzx\nGLSL syntax: v.xyzy\nGLSL syntax: v.xyzy\nGLSL syntax: v.xyzz\nGLSL syntax: v.xyzz\nGLSL syntax: v.xz\nGLSL syntax: v.xz\nGLSL syntax: v.xzw\nGLSL syntax: v.xzww\nGLSL syntax: v.xzwx\nGLSL syntax: v.xzwy\nGLSL syntax: v.xzwz\nGLSL syntax: v.xzx\nGLSL syntax: v.xzx\nGLSL syntax: v.xzxw\nGLSL syntax: v.xzxx\nGLSL syntax: v.xzxx\nGLSL syntax: v.xzxy\nGLSL syntax: v.xzxy\nGLSL syntax: v.xzxz\nGLSL syntax: v.xzxz\nGLSL syntax: v.xzy\nGLSL syntax: v.xzy\nGLSL syntax: v.xzyw\nGLSL syntax: v.xzyx\nGLSL syntax: v.xzyx\nGLSL syntax: v.xzyy\nGLSL syntax: v.xzyy\nGLSL syntax: v.xzyz\nGLSL syntax: v.xzyz\nGLSL syntax: v.xzz\nGLSL syntax: v.xzz\nGLSL syntax: v.xzzw\nGLSL syntax: v.xzzx\nGLSL syntax: v.xzzx\nGLSL syntax: v.xzzy\nGLSL syntax: v.xzzy\nGLSL syntax: v.xzzz\nGLSL syntax: v.xzzz\nGLSL syntax: v.y\nGLSL syntax: v.y\nGLSL syntax: v.y\nGLSL syntax: v.yw\nGLSL syntax: v.yww\nGLSL syntax: v.ywww\nGLSL syntax: v.ywwx\nGLSL syntax: v.ywwy\nGLSL syntax: v.ywwz\nGLSL syntax: v.ywx\nGLSL syntax: v.ywxw\nGLSL syntax: v.ywxx\nGLSL syntax: v.ywxy\nGLSL syntax: v.ywxz\nGLSL syntax: v.ywy\nGLSL syntax: v.ywyw\nGLSL syntax: v.ywyx\nGLSL syntax: v.ywyy\nGLSL syntax: v.ywyz\nGLSL syntax: v.ywz\nGLSL syntax: v.ywzw\nGLSL syntax: v.ywzx\nGLSL syntax: v.ywzy\nGLSL syntax: v.ywzz\nGLSL syntax: v.yx\nGLSL syntax: v.yx\nGLSL syntax: v.yx\nGLSL syntax: v.yxw\nGLSL syntax: v.yxww\nGLSL syntax: v.yxwx\nGLSL syntax: v.yxwy\nGLSL syntax: v.yxwz\nGLSL syntax: v.yxx\nGLSL syntax: v.yxx\nGLSL syntax: v.yxx\nGLSL syntax: v.yxxw\nGLSL syntax: v.yxxx\nGLSL syntax: v.yxxx\nGLSL syntax: v.yxxx\nGLSL syntax: v.yxxy\nGLSL syntax: v.yxxy\nGLSL syntax: v.yxxy\nGLSL syntax: v.yxxz\nGLSL syntax: v.yxxz\nGLSL syntax: v.yxy\nGLSL syntax: v.yxy\nGLSL syntax: v.yxy\nGLSL syntax: v.yxyw\nGLSL syntax: v.yxyx\nGLSL syntax: v.yxyx\nGLSL syntax: v.yxyx\nGLSL syntax: v.yxyy\nGLSL syntax: v.yxyy\nGLSL syntax: v.yxyy\nGLSL syntax: v.yxyz\nGLSL syntax: v.yxyz\nGLSL syntax: v.yxz\nGLSL syntax: v.yxz\nGLSL syntax: v.yxzw\nGLSL syntax: v.yxzx\nGLSL syntax: v.yxzx\nGLSL syntax: v.yxzy\nGLSL syntax: v.yxzy\nGLSL syntax: v.yxzz\nGLSL syntax: v.yxzz\nGLSL syntax: v.yy\nGLSL syntax: v.yy\nGLSL syntax: v.yy\nGLSL syntax: v.yyw\nGLSL syntax: v.yyww\nGLSL syntax: v.yywx\nGLSL syntax: v.yywy\nGLSL syntax: v.yywz\nGLSL syntax: v.yyx\nGLSL syntax: v.yyx\nGLSL syntax: v.yyx\nGLSL syntax: v.yyxw\nGLSL syntax: v.yyxx\nGLSL syntax: v.yyxx\nGLSL syntax: v.yyxx\nGLSL syntax: v.yyxy\nGLSL syntax: v.yyxy\nGLSL syntax: v.yyxy\nGLSL syntax: v.yyxz\nGLSL syntax: v.yyxz\nGLSL syntax: v.yyy\nGLSL syntax: v.yyy\nGLSL syntax: v.yyy\nGLSL syntax: v.yyyw\nGLSL syntax: v.yyyx\nGLSL syntax: v.yyyx\nGLSL syntax: v.yyyx\nGLSL syntax: v.yyyy\nGLSL syntax: v.yyyy\nGLSL syntax: v.yyyy\nGLSL syntax: v.yyyz\nGLSL syntax: v.yyyz\nGLSL syntax: v.yyz\nGLSL syntax: v.yyz\nGLSL syntax: v.yyzw\nGLSL syntax: v.yyzx\nGLSL syntax: v.yyzx\nGLSL syntax: v.yyzy\nGLSL syntax: v.yyzy\nGLSL syntax: v.yyzz\nGLSL syntax: v.yyzz\nGLSL syntax: v.yz\nGLSL syntax: v.yz\nGLSL syntax: v.yzw\nGLSL syntax: v.yzww\nGLSL syntax: v.yzwx\nGLSL syntax: v.yzwy\nGLSL syntax: v.yzwz\nGLSL syntax: v.yzx\nGLSL syntax: v.yzx\nGLSL syntax: v.yzxw\nGLSL syntax: v.yzxx\nGLSL syntax: v.yzxx\nGLSL syntax: v.yzxy\nGLSL syntax: v.yzxy\nGLSL syntax: v.yzxz\nGLSL syntax: v.yzxz\nGLSL syntax: v.yzy\nGLSL syntax: v.yzy\nGLSL syntax: v.yzyw\nGLSL syntax: v.yzyx\nGLSL syntax: v.yzyx\nGLSL syntax: v.yzyy\nGLSL syntax: v.yzyy\nGLSL syntax: v.yzyz\nGLSL syntax: v.yzyz\nGLSL syntax: v.yzz\nGLSL syntax: v.yzz\nGLSL syntax: v.yzzw\nGLSL syntax: v.yzzx\nGLSL syntax: v.yzzx\nGLSL syntax: v.yzzy\nGLSL syntax: v.yzzy\nGLSL syntax: v.yzzz\nGLSL syntax: v.yzzz\nGLSL syntax: v.z\nGLSL syntax: v.z\nGLSL syntax: v.zw\nGLSL syntax: v.zww\nGLSL syntax: v.zwww\nGLSL syntax: v.zwwx\nGLSL syntax: v.zwwy\nGLSL syntax: v.zwwz\nGLSL syntax: v.zwx\nGLSL syntax: v.zwxw\nGLSL syntax: v.zwxx\nGLSL syntax: v.zwxy\nGLSL syntax: v.zwxz\nGLSL syntax: v.zwy\nGLSL syntax: v.zwyw\nGLSL syntax: v.zwyx\nGLSL syntax: v.zwyy\nGLSL syntax: v.zwyz\nGLSL syntax: v.zwz\nGLSL syntax: v.zwzw\nGLSL syntax: v.zwzx\nGLSL syntax: v.zwzy\nGLSL syntax: v.zwzz\nGLSL syntax: v.zx\nGLSL syntax: v.zx\nGLSL syntax: v.zxw\nGLSL syntax: v.zxww\nGLSL syntax: v.zxwx\nGLSL syntax: v.zxwy\nGLSL syntax: v.zxwz\nGLSL syntax: v.zxx\nGLSL syntax: v.zxx\nGLSL syntax: v.zxxw\nGLSL syntax: v.zxxx\nGLSL syntax: v.zxxx\nGLSL syntax: v.zxxy\nGLSL syntax: v.zxxy\nGLSL syntax: v.zxxz\nGLSL syntax: v.zxxz\nGLSL syntax: v.zxy\nGLSL syntax: v.zxy\nGLSL syntax: v.zxyw\nGLSL syntax: v.zxyx\nGLSL syntax: v.zxyx\nGLSL syntax: v.zxyy\nGLSL syntax: v.zxyy\nGLSL syntax: v.zxyz\nGLSL syntax: v.zxyz\nGLSL syntax: v.zxz\nGLSL syntax: v.zxz\nGLSL syntax: v.zxzw\nGLSL syntax: v.zxzx\nGLSL syntax: v.zxzx\nGLSL syntax: v.zxzy\nGLSL syntax: v.zxzy\nGLSL syntax: v.zxzz\nGLSL syntax: v.zxzz\nGLSL syntax: v.zy\nGLSL syntax: v.zy\nGLSL syntax: v.zyw\nGLSL syntax: v.zyww\nGLSL syntax: v.zywx\nGLSL syntax: v.zywy\nGLSL syntax: v.zywz\nGLSL syntax: v.zyx\nGLSL syntax: v.zyx\nGLSL syntax: v.zyxw\nGLSL syntax: v.zyxx\nGLSL syntax: v.zyxx\nGLSL syntax: v.zyxy\nGLSL syntax: v.zyxy\nGLSL syntax: v.zyxz\nGLSL syntax: v.zyxz\nGLSL syntax: v.zyy\nGLSL syntax: v.zyy\nGLSL syntax: v.zyyw\nGLSL syntax: v.zyyx\nGLSL syntax: v.zyyx\nGLSL syntax: v.zyyy\nGLSL syntax: v.zyyy\nGLSL syntax: v.zyyz\nGLSL syntax: v.zyyz\nGLSL syntax: v.zyz\nGLSL syntax: v.zyz\nGLSL syntax: v.zyzw\nGLSL syntax: v.zyzx\nGLSL syntax: v.zyzx\nGLSL syntax: v.zyzy\nGLSL syntax: v.zyzy\nGLSL syntax: v.zyzz\nGLSL syntax: v.zyzz\nGLSL syntax: v.zz\nGLSL syntax: v.zz\nGLSL syntax: v.zzw\nGLSL syntax: v.zzww\nGLSL syntax: v.zzwx\nGLSL syntax: v.zzwy\nGLSL syntax: v.zzwz\nGLSL syntax: v.zzx\nGLSL syntax: v.zzx\nGLSL syntax: v.zzxw\nGLSL syntax: v.zzxx\nGLSL syntax: v.zzxx\nGLSL syntax: v.zzxy\nGLSL syntax: v.zzxy\nGLSL syntax: v.zzxz\nGLSL syntax: v.zzxz\nGLSL syntax: v.zzy\nGLSL syntax: v.zzy\nGLSL syntax: v.zzyw\nGLSL syntax: v.zzyx\nGLSL syntax: v.zzyx\nGLSL syntax: v.zzyy\nGLSL syntax: v.zzyy\nGLSL syntax: v.zzyz\nGLSL syntax: v.zzyz\nGLSL syntax: v.zzz\nGLSL syntax: v.zzz\nGLSL syntax: v.zzzw\nGLSL syntax: v.zzzx\nGLSL syntax: v.zzzx\nGLSL syntax: v.zzzy\nGLSL syntax: v.zzzy\nGLSL syntax: v.zzzz\nGLSL syntax: v.zzzz\nIt is an alias of identity().\nA dynamic size matrix of row primary order for an M x N.\nIt is an alias of transpose().\nGet the number of columns for the matrix.\nGet the number of elements of the matrix.\nCalculate the determinant value of the matrix.\nEquality judgment function for allowable errors.\nReturns the argument unchanged.\nGet a copy of the elements of a column of the matrix.\nGet a copy of the elements of a row of the matrix.\nCreate an identity matrix of the specified size.\nCalls <code>U::from(self)</code>.\nCalculate the inverse matrix of the matrix\nDetermine whether the two matrices are the same size.\nDetermine if the matrix is a phalanx or not.\nLU decomposition is performed on the matrix.\nCalculate the rank of the matrix\nGet the number of rows of the matrix.\nSet the elements of a column of the matrix to specified …\nSet the elements of a row of the matrix to specified …\nSwap two columns of the matrix.\nSwap two rows of the matrix.\nGet a transpose matrix for the matrix.")